[{"D:\\inzynierka\\overseer-client\\src\\index.js":"1","D:\\inzynierka\\overseer-client\\src\\App.js":"2","D:\\inzynierka\\overseer-client\\src\\Store.js":"3","D:\\inzynierka\\overseer-client\\src\\Routes.js":"4","D:\\inzynierka\\overseer-client\\src\\components\\index.js":"5","D:\\inzynierka\\overseer-client\\src\\redux\\index.js":"6","D:\\inzynierka\\overseer-client\\src\\pages\\index.js":"7","D:\\inzynierka\\overseer-client\\src\\components\\Layout.js":"8","D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\index.js":"9","D:\\inzynierka\\overseer-client\\src\\pages\\Home.js":"10","D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\auth.reducer.js":"11","D:\\inzynierka\\overseer-client\\src\\components\\Header.js":"12","D:\\inzynierka\\overseer-client\\src\\pages\\Register.js":"13","D:\\inzynierka\\overseer-client\\src\\pages\\Login.js":"14","D:\\inzynierka\\overseer-client\\src\\components\\forms\\index.js":"15","D:\\inzynierka\\overseer-client\\src\\components\\forms\\RegisterForm.js":"16","D:\\inzynierka\\overseer-client\\src\\services\\index.js":"17","D:\\inzynierka\\overseer-client\\src\\services\\UserApi.js":"18","D:\\inzynierka\\overseer-client\\src\\redux\\actions\\index.js":"19","D:\\inzynierka\\overseer-client\\src\\redux\\actions\\alert.actions.js":"20","D:\\inzynierka\\overseer-client\\src\\redux\\constants\\index.js":"21","D:\\inzynierka\\overseer-client\\src\\redux\\constants\\alert.constants.js":"22","D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\alert.reducer.js":"23","D:\\inzynierka\\overseer-client\\src\\components\\Alert.js":"24","D:\\inzynierka\\overseer-client\\src\\components\\forms\\LoginForm.js":"25","D:\\inzynierka\\overseer-client\\src\\status.constants.js":"26","D:\\inzynierka\\overseer-client\\src\\redux\\actions\\auth.actions.js":"27","D:\\inzynierka\\overseer-client\\src\\redux\\constants\\auth.constants.js":"28","D:\\inzynierka\\overseer-client\\src\\pages\\Account.js":"29","D:\\inzynierka\\overseer-client\\src\\pages\\Logout.js":"30","D:\\inzynierka\\overseer-client\\src\\pages\\ChangePassword.js":"31","D:\\inzynierka\\overseer-client\\src\\components\\forms\\ChangePasswordForm.js":"32","D:\\inzynierka\\overseer-client\\src\\util\\index.js":"33","D:\\inzynierka\\overseer-client\\src\\util\\JwtDecoder.js":"34","D:\\inzynierka\\overseer-client\\src\\util\\TimestampParser.js":"35","D:\\inzynierka\\overseer-client\\src\\components\\OnlyLoggedInRoute.js":"36","D:\\inzynierka\\overseer-client\\src\\util\\DispatchWithTokenRefresh.js":"37","D:\\inzynierka\\overseer-client\\src\\pages\\RequestNewPassword.js":"38","D:\\inzynierka\\overseer-client\\src\\components\\forms\\RequestNewPasswordForm.js":"39","D:\\inzynierka\\overseer-client\\src\\pages\\NewPassword.js":"40","D:\\inzynierka\\overseer-client\\src\\components\\NotFoundComponent.js":"41","D:\\inzynierka\\overseer-client\\src\\components\\forms\\NewPasswordForm.js":"42","D:\\inzynierka\\overseer-client\\src\\pages\\DeleteAccount.js":"43","D:\\inzynierka\\overseer-client\\src\\pages\\Page404.js":"44","D:\\inzynierka\\overseer-client\\src\\components\\forms\\DeleteAccountForm.js":"45","D:\\inzynierka\\overseer-client\\src\\pages\\NewProject.js":"46","D:\\inzynierka\\overseer-client\\src\\components\\forms\\NewProjectForm.js":"47","D:\\inzynierka\\overseer-client\\src\\services\\ProjectApi.js":"48","D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\project.reducer.js":"49","D:\\inzynierka\\overseer-client\\src\\redux\\constants\\project.constants.js":"50","D:\\inzynierka\\overseer-client\\src\\components\\ProjectList.js":"51","D:\\inzynierka\\overseer-client\\src\\request.constants.js":"52","D:\\inzynierka\\overseer-client\\src\\redux\\actions\\project.actions.js":"53","D:\\inzynierka\\overseer-client\\src\\pages\\Project.js":"54","D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\index.js":"55","D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectCard.js":"56","D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectTitleRow.js":"57","D:\\inzynierka\\overseer-client\\src\\pages\\EditProject.js":"58","D:\\inzynierka\\overseer-client\\src\\components\\forms\\ProjectEditForm.js":"59","D:\\inzynierka\\overseer-client\\src\\util\\ProjectAuthorizationService.js":"60","D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectMemberInvitationsRow.js":"61","D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectMembersRow.js":"62","D:\\inzynierka\\overseer-client\\src\\hooks\\index.js":"63","D:\\inzynierka\\overseer-client\\src\\hooks\\useDebounce.js":"64","D:\\inzynierka\\overseer-client\\src\\redux\\constants\\modal.constants.js":"65","D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\modal.reducer.js":"66","D:\\inzynierka\\overseer-client\\src\\redux\\actions\\modal.actions.js":"67","D:\\inzynierka\\overseer-client\\src\\pages\\ManageInvitation.js":"68","D:\\inzynierka\\overseer-client\\src\\util\\TextFormatter.js":"69","D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectApiKeysRow.js":"70","D:\\inzynierka\\overseer-client\\src\\components\\Seo.js":"71","D:\\inzynierka\\overseer-client\\src\\redux\\constants\\error.constants.js":"72","D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\error.reducer.js":"73","D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectErrorsRow.js":"74","D:\\inzynierka\\overseer-client\\src\\redux\\actions\\error.actions.js":"75","D:\\inzynierka\\overseer-client\\src\\pages\\Error.js":"76","D:\\inzynierka\\overseer-client\\src\\components\\ErrorCard\\index.js":"77","D:\\inzynierka\\overseer-client\\src\\components\\ErrorCard\\ErrorCard.js":"78","D:\\inzynierka\\overseer-client\\src\\services\\IntegrationApi.js":"79","D:\\inzynierka\\overseer-client\\src\\redux\\actions\\webhook-integration.actions.js":"80","D:\\inzynierka\\overseer-client\\src\\redux\\constants\\webhook-integration.constants.js":"81","D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\webhook-integration.reducer.js":"82","D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\WebhookIntegrationsRow.js":"83","D:\\inzynierka\\overseer-client\\src\\pages\\NewWebhookIntegration.js":"84","D:\\inzynierka\\overseer-client\\src\\components\\forms\\WebhookIntegrationForm.js":"85","D:\\inzynierka\\overseer-client\\src\\pages\\WebhookIntegration.js":"86","D:\\inzynierka\\overseer-client\\src\\components\\WebhookIntegrationCard\\index.js":"87","D:\\inzynierka\\overseer-client\\src\\components\\WebhookIntegrationCard\\WebhookIntegrationCard.js":"88","D:\\inzynierka\\overseer-client\\src\\components\\WebhookIntegrationCard\\WebhookIntegrationTitleRow.js":"89","D:\\inzynierka\\overseer-client\\src\\pages\\EditWebhookIntegration.js":"90","D:\\inzynierka\\overseer-client\\src\\components\\WebhookIntegrationCard\\WebhookIntegrationMessagesRow.js":"91","D:\\inzynierka\\overseer-client\\src\\components\\TelegramIntegrationCard\\index.js":"92","D:\\inzynierka\\overseer-client\\src\\components\\TelegramIntegrationCard\\TelegramIntegrationCard.js":"93","D:\\inzynierka\\overseer-client\\src\\redux\\constants\\telegram-integration.constants.js":"94","D:\\inzynierka\\overseer-client\\src\\redux\\actions\\telegram-integration.actions.js":"95","D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\telegram-integration.reducer.js":"96","D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\TelegramIntegrationsRow.js":"97","D:\\inzynierka\\overseer-client\\src\\pages\\NewTelegramIntegration.js":"98","D:\\inzynierka\\overseer-client\\src\\components\\forms\\TelegramIntegrationForm.js":"99","D:\\inzynierka\\overseer-client\\src\\components\\TelegramIntegrationCard\\TelegramIntegrationTitleRow.js":"100","D:\\inzynierka\\overseer-client\\src\\pages\\TelegramIntegration.js":"101","D:\\inzynierka\\overseer-client\\src\\components\\TelegramIntegrationCard\\TelegramIntegrationMessageRow.js":"102","D:\\inzynierka\\overseer-client\\src\\pages\\EditTelegramIntegration.js":"103","D:\\inzynierka\\overseer-client\\src\\components\\Footer.js":"104"},{"size":313,"mtime":1611803726514,"results":"105","hashOfConfig":"106"},{"size":294,"mtime":1611539111874,"results":"107","hashOfConfig":"106"},{"size":126,"mtime":1611536550331,"results":"108","hashOfConfig":"106"},{"size":3580,"mtime":1612057946777,"results":"109","hashOfConfig":"106"},{"size":359,"mtime":1612123117486,"results":"110","hashOfConfig":"106"},{"size":85,"mtime":1611538357810,"results":"111","hashOfConfig":"106"},{"size":663,"mtime":1612057923317,"results":"112","hashOfConfig":"106"},{"size":1433,"mtime":1612123300685,"results":"113","hashOfConfig":"106"},{"size":912,"mtime":1612055546825,"results":"114","hashOfConfig":"106"},{"size":1664,"mtime":1612123039705,"results":"115","hashOfConfig":"106"},{"size":1290,"mtime":1611856556040,"results":"116","hashOfConfig":"106"},{"size":1872,"mtime":1611801219989,"results":"117","hashOfConfig":"106"},{"size":298,"mtime":1611943208752,"results":"118","hashOfConfig":"106"},{"size":228,"mtime":1611943840996,"results":"119","hashOfConfig":"106"},{"size":375,"mtime":1612056626419,"results":"120","hashOfConfig":"106"},{"size":3126,"mtime":1611808767013,"results":"121","hashOfConfig":"106"},{"size":92,"mtime":1612022219576,"results":"122","hashOfConfig":"106"},{"size":2073,"mtime":1611886996480,"results":"123","hashOfConfig":"106"},{"size":232,"mtime":1612055747919,"results":"124","hashOfConfig":"106"},{"size":485,"mtime":1611537980536,"results":"125","hashOfConfig":"106"},{"size":280,"mtime":1612055752824,"results":"126","hashOfConfig":"106"},{"size":119,"mtime":1611537696467,"results":"127","hashOfConfig":"106"},{"size":634,"mtime":1611539333279,"results":"128","hashOfConfig":"106"},{"size":605,"mtime":1611856651467,"results":"129","hashOfConfig":"106"},{"size":2957,"mtime":1611944736466,"results":"130","hashOfConfig":"106"},{"size":353,"mtime":1611800239896,"results":"131","hashOfConfig":"106"},{"size":224,"mtime":1611800554582,"results":"132","hashOfConfig":"106"},{"size":79,"mtime":1611800917767,"results":"133","hashOfConfig":"106"},{"size":977,"mtime":1612123349076,"results":"134","hashOfConfig":"106"},{"size":528,"mtime":1611856846876,"results":"135","hashOfConfig":"106"},{"size":232,"mtime":1611942751459,"results":"136","hashOfConfig":"106"},{"size":2595,"mtime":1611808693425,"results":"137","hashOfConfig":"106"},{"size":192,"mtime":1611893741889,"results":"138","hashOfConfig":"106"},{"size":383,"mtime":1611856581933,"results":"139","hashOfConfig":"106"},{"size":121,"mtime":1611802858912,"results":"140","hashOfConfig":"106"},{"size":910,"mtime":1611958143674,"results":"141","hashOfConfig":"106"},{"size":328,"mtime":1611941753209,"results":"142","hashOfConfig":"106"},{"size":277,"mtime":1611943214636,"results":"143","hashOfConfig":"106"},{"size":1466,"mtime":1611809736695,"results":"144","hashOfConfig":"106"},{"size":1043,"mtime":1611943167593,"results":"145","hashOfConfig":"106"},{"size":224,"mtime":1611811563712,"results":"146","hashOfConfig":"106"},{"size":1814,"mtime":1611812565906,"results":"147","hashOfConfig":"106"},{"size":228,"mtime":1611942870424,"results":"148","hashOfConfig":"106"},{"size":255,"mtime":1611943197623,"results":"149","hashOfConfig":"106"},{"size":2594,"mtime":1611856668364,"results":"150","hashOfConfig":"106"},{"size":249,"mtime":1611943190969,"results":"151","hashOfConfig":"106"},{"size":1540,"mtime":1611857972750,"results":"152","hashOfConfig":"106"},{"size":4944,"mtime":1612122512923,"results":"153","hashOfConfig":"106"},{"size":858,"mtime":1611942226699,"results":"154","hashOfConfig":"106"},{"size":188,"mtime":1612024473743,"results":"155","hashOfConfig":"106"},{"size":6314,"mtime":1612122514841,"results":"156","hashOfConfig":"106"},{"size":93,"mtime":1611858095304,"results":"157","hashOfConfig":"106"},{"size":455,"mtime":1611942199064,"results":"158","hashOfConfig":"106"},{"size":2352,"mtime":1612055877769,"results":"159","hashOfConfig":"106"},{"size":30,"mtime":1611861285725,"results":"160","hashOfConfig":"106"},{"size":1261,"mtime":1612055845504,"results":"161","hashOfConfig":"106"},{"size":1959,"mtime":1611942404167,"results":"162","hashOfConfig":"106"},{"size":2327,"mtime":1611942901294,"results":"163","hashOfConfig":"106"},{"size":1591,"mtime":1611862871138,"results":"164","hashOfConfig":"106"},{"size":177,"mtime":1611862078210,"results":"165","hashOfConfig":"106"},{"size":3934,"mtime":1611948754231,"results":"166","hashOfConfig":"106"},{"size":6001,"mtime":1611893455409,"results":"167","hashOfConfig":"106"},{"size":30,"mtime":1611886420906,"results":"168","hashOfConfig":"106"},{"size":412,"mtime":1611886511498,"results":"169","hashOfConfig":"106"},{"size":62,"mtime":1611889635896,"results":"170","hashOfConfig":"106"},{"size":504,"mtime":1611889882529,"results":"171","hashOfConfig":"106"},{"size":215,"mtime":1611889889855,"results":"172","hashOfConfig":"106"},{"size":2708,"mtime":1611943410607,"results":"173","hashOfConfig":"106"},{"size":171,"mtime":1611893732980,"results":"174","hashOfConfig":"106"},{"size":5012,"mtime":1611941763311,"results":"175","hashOfConfig":"106"},{"size":235,"mtime":1611942699955,"results":"176","hashOfConfig":"106"},{"size":151,"mtime":1612024483671,"results":"177","hashOfConfig":"106"},{"size":668,"mtime":1611957806704,"results":"178","hashOfConfig":"106"},{"size":10815,"mtime":1612121639537,"results":"179","hashOfConfig":"106"},{"size":364,"mtime":1611957760184,"results":"180","hashOfConfig":"106"},{"size":1983,"mtime":1611959554669,"results":"181","hashOfConfig":"106"},{"size":28,"mtime":1611958527411,"results":"182","hashOfConfig":"106"},{"size":2444,"mtime":1611959650952,"results":"183","hashOfConfig":"106"},{"size":3678,"mtime":1612055208615,"results":"184","hashOfConfig":"106"},{"size":368,"mtime":1612022724542,"results":"185","hashOfConfig":"106"},{"size":153,"mtime":1612055460768,"results":"186","hashOfConfig":"106"},{"size":612,"mtime":1612022994526,"results":"187","hashOfConfig":"106"},{"size":3964,"mtime":1612055697923,"results":"188","hashOfConfig":"106"},{"size":2446,"mtime":1612029153226,"results":"189","hashOfConfig":"106"},{"size":5485,"mtime":1612056309685,"results":"190","hashOfConfig":"106"},{"size":3030,"mtime":1612055247441,"results":"191","hashOfConfig":"106"},{"size":41,"mtime":1612031682433,"results":"192","hashOfConfig":"106"},{"size":2658,"mtime":1612054390295,"results":"193","hashOfConfig":"106"},{"size":1144,"mtime":1612052319115,"results":"194","hashOfConfig":"106"},{"size":3017,"mtime":1612032545315,"results":"195","hashOfConfig":"106"},{"size":5040,"mtime":1612057487819,"results":"196","hashOfConfig":"106"},{"size":42,"mtime":1612055285846,"results":"197","hashOfConfig":"106"},{"size":2668,"mtime":1612057243286,"results":"198","hashOfConfig":"106"},{"size":156,"mtime":1612055744448,"results":"199","hashOfConfig":"106"},{"size":372,"mtime":1612055800090,"results":"200","hashOfConfig":"106"},{"size":616,"mtime":1612055530568,"results":"201","hashOfConfig":"106"},{"size":4072,"mtime":1612055705491,"results":"202","hashOfConfig":"106"},{"size":2483,"mtime":1612056491939,"results":"203","hashOfConfig":"106"},{"size":6009,"mtime":1612056711621,"results":"204","hashOfConfig":"106"},{"size":1270,"mtime":1612057110425,"results":"205","hashOfConfig":"106"},{"size":3043,"mtime":1612057134779,"results":"206","hashOfConfig":"106"},{"size":4709,"mtime":1612057842988,"results":"207","hashOfConfig":"106"},{"size":3007,"mtime":1612057903548,"results":"208","hashOfConfig":"106"},{"size":310,"mtime":1612123267430,"results":"209","hashOfConfig":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},"1k6glw8",{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"212"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"212"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"212"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"212"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"212"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"212"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"212"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"212"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"212"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"212"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"212"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"212"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"212"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"212"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"212"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"212"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"212"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"212"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\inzynierka\\overseer-client\\src\\index.js",[],["437","438"],"D:\\inzynierka\\overseer-client\\src\\App.js",[],"D:\\inzynierka\\overseer-client\\src\\Store.js",[],"D:\\inzynierka\\overseer-client\\src\\Routes.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\Layout.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\Home.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\auth.reducer.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\Header.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\Register.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\Login.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\forms\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\forms\\RegisterForm.js",[],"D:\\inzynierka\\overseer-client\\src\\services\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\services\\UserApi.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\actions\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\actions\\alert.actions.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\constants\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\constants\\alert.constants.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\alert.reducer.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\Alert.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\forms\\LoginForm.js",["439","440"],"import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Form, FormGroup, Input, Label, Button, Row, Col } from 'reactstrap';\r\nimport { alertActions, authActions } from '../../redux';\r\nimport { RoutingConfig } from '../../Routes';\r\nimport { UserApi } from '../../services';\r\nimport { STATUS_CODES } from '../../status.constants';\r\n\r\nexport const LoginForm = () => {\r\n  const { register, handleSubmit } = useForm();\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onSubmit = data => {\r\n    setErrorMessage(\"\");\r\n    UserApi.authenticate(data)\r\n    .then(response => response.data)\r\n    .then(json => {\r\n      const getCookie = (cname) => {\r\n        var name = cname + \"=\";\r\n        var decodedCookie = decodeURIComponent(document.cookie);\r\n        var ca = decodedCookie.split(';');\r\n        for(var i = 0; i <ca.length; i++) {\r\n          var c = ca[i];\r\n          while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n          }\r\n          if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n          }\r\n        }\r\n        return \"\";\r\n      }\r\n\r\n      const redirectCookie = getCookie(\"login_redirect_path\");\r\n\r\n      dispatch(authActions.authenticate(json.payload.access_token));\r\n      if(redirectCookie) {\r\n        history.push(redirectCookie);\r\n      }\r\n      else {\r\n        history.push(RoutingConfig.account);\r\n      }\r\n      dispatch(alertActions.successAlert(\"Login success\"));\r\n    })\r\n    .catch(error => {\r\n      const statusCode = error.request.status;\r\n      switch(statusCode) {\r\n        case STATUS_CODES.BAD_REQUEST:\r\n          setErrorMessage(\"Invalid credentials.\")\r\n          break;\r\n        default:\r\n          setErrorMessage(\"There was an error, pleas try again later\");\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit(onSubmit)} className=\"pt-2\">\r\n      <h2 className=\"mb-4\">Log in to your account</h2>\r\n      <FormGroup>\r\n        <Label for=\"login_login\">Username</Label>\r\n        <Input type=\"text\" name=\"login\" id=\"login_login\" innerRef={register} required />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"login_password\">Pasword</Label>\r\n        <Input type=\"password\" name=\"password\" id=\"login_password\" innerRef={register} required />\r\n        {errorMessage && <div className=\"text-danger\">{errorMessage}</div>}\r\n      </FormGroup>\r\n      <Button>Login</Button>\r\n      <Row className=\"pt-2\">\r\n        <Col className=\"text-center\" md=\"6\" lg=\"6\">\r\n          <Link to={RoutingConfig.requestNewPassword}>Forgot password?</Link><br />\r\n        </Col>\r\n        <Col className=\"text-center\" md=\"6\" lg=\"6\">\r\n          <Link to={RoutingConfig.register}>Don't have an account?</Link>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}","D:\\inzynierka\\overseer-client\\src\\status.constants.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\actions\\auth.actions.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\constants\\auth.constants.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\Account.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\Logout.js",["441"],"import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { alertActions, authActions } from '../redux';\r\nimport { RoutingConfig } from '../Routes';\r\n\r\nexport const Logout = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(authActions.logout());\r\n    history.push(RoutingConfig.login);\r\n    dispatch(alertActions.successAlert(\"You have been logged out\"));\r\n  }, []);\r\n  \r\n  return null;\r\n}","D:\\inzynierka\\overseer-client\\src\\pages\\ChangePassword.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\forms\\ChangePasswordForm.js",[],"D:\\inzynierka\\overseer-client\\src\\util\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\util\\JwtDecoder.js",[],"D:\\inzynierka\\overseer-client\\src\\util\\TimestampParser.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\OnlyLoggedInRoute.js",[],"D:\\inzynierka\\overseer-client\\src\\util\\DispatchWithTokenRefresh.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\RequestNewPassword.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\forms\\RequestNewPasswordForm.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\NewPassword.js",["442"],"import React, { useEffect, useState } from 'react'\r\nimport { Col, Row } from 'reactstrap';\r\nimport { NewPasswordForm, Seo } from '../components';\r\nimport { UserApi } from '../services';\r\n\r\nexport const NewPassword = props => {\r\n  const queryParams = new URLSearchParams(props.location.search);\r\n  const passwordResetToken = queryParams.get(\"password-reset-token\");\r\n  const [validToken, setValidToken] = useState();\r\n\r\n  useEffect(() => {\r\n    UserApi.checkPasswordResetToken(passwordResetToken)\r\n    .then(response => {\r\n      setValidToken(true);\r\n    })\r\n    .catch(error => {\r\n      setValidToken(false);\r\n    });\r\n  }, []);\r\n\r\n  if(validToken === false) {\r\n    return(\r\n      <Row className=\"pt-5\">\r\n        <Seo pageTitle=\"New password\" />\r\n        <Col className=\"text-center\"><h2>Token is invalid or expired.</h2></Col>\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  if(validToken === true) {\r\n    return <>\r\n      <Seo pageTitle=\"New password\" />\r\n      <NewPasswordForm passwordResetTokenId={passwordResetToken} />\r\n    </>\r\n  }\r\n\r\n  return null;\r\n}","D:\\inzynierka\\overseer-client\\src\\components\\NotFoundComponent.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\forms\\NewPasswordForm.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\DeleteAccount.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\Page404.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\forms\\DeleteAccountForm.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\NewProject.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\forms\\NewProjectForm.js",[],"D:\\inzynierka\\overseer-client\\src\\services\\ProjectApi.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\project.reducer.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\constants\\project.constants.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\ProjectList.js",["443","444","445"],"D:\\inzynierka\\overseer-client\\src\\request.constants.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\actions\\project.actions.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\Project.js",["446"],"import React, { useEffect, useState } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { ProjectApi } from '../services/ProjectApi';\r\nimport { REQUEST } from '../request.constants';\r\nimport { STATUS_CODES } from '../status.constants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { RoutingConfig } from '../Routes';\r\nimport { alertActions, projectActions } from '../redux';\r\nimport { ProjectCard } from '../components';\r\nimport { Seo } from '../components';\r\n\r\nconst Project = ({ projects, auth, match, errors, location, webhookIntegrations, telegramIntegrations }) => {\r\n  const projectId = match.params.id;\r\n  const project = projects.currentProject;\r\n  const [status,setStatus] = useState();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!project || project.id !== projectId) {\r\n      ProjectApi.getProject(projectId)\r\n      .then(response => response.data)\r\n      .then(json => {\r\n        dispatch(projectActions.receiveProject(json.payload));\r\n        setStatus(REQUEST.SUCCESS);\r\n      })\r\n      .catch(error => {\r\n        const statusCode = error.request.status;\r\n\r\n        switch(statusCode) {\r\n          case STATUS_CODES.FORBIDDEN:\r\n            history.push(RoutingConfig.account);\r\n            dispatch(alertActions.errorAlert(\"You are not allowed to view this project\"));\r\n            break;\r\n          default:\r\n            setStatus(REQUEST.ERROR);\r\n        }\r\n      })\r\n\r\n      setStatus(REQUEST.PENDING);\r\n    }\r\n    else {\r\n      setStatus(REQUEST.SUCCESS);\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <>\r\n      {<Seo pageTitle={project ? project.title : ''} />}\r\n      {status === REQUEST.PENDING && <h2>Loading...</h2>}\r\n      {status === REQUEST.ERROR && <h2>Failed to load project.</h2>}\r\n      {status === REQUEST.SUCCESS && project && <ProjectCard project={project} user={auth.user} errors={errors} location={location} webhookIntegrations={webhookIntegrations} telegramIntegrations={telegramIntegrations} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  projects: state.projects,\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n  webhookIntegrations: state.webhookIntegrations,\r\n  telegramIntegrations: state.telegramIntegrations,\r\n});\r\n\r\nconst ConnectedPage = connect(mapStateToProps)(Project);\r\n\r\nexport { ConnectedPage as Project };","D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectCard.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectTitleRow.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\EditProject.js",["447"],"import React, { useEffect, useState } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { ProjectApi } from '../services/ProjectApi';\r\nimport { REQUEST } from '../request.constants';\r\nimport { STATUS_CODES } from '../status.constants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { RoutingConfig } from '../Routes';\r\nimport { alertActions, projectActions } from '../redux';\r\nimport { ProjectAuthorizationService } from '../util';\r\nimport { ProjectEditForm, Seo } from '../components';\r\n\r\nconst EditProject = ({ auth, projects, match}) => {\r\n  const projectId = match.params.id;\r\n  const project = projects.currentProject;\r\n  const [status,setStatus] = useState();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!project || project.id !== projectId) {\r\n      ProjectApi.getProject(projectId)\r\n      .then(response => response.data)\r\n      .then(json => {\r\n        dispatch(projectActions.receiveProject(json.payload));\r\n        setStatus(REQUEST.SUCCESS);\r\n      })\r\n      .catch(error => {\r\n        const statusCode = error.request.status;\r\n\r\n        switch(statusCode) {\r\n          case STATUS_CODES.FORBIDDEN:\r\n            history.push(RoutingConfig.account);\r\n            dispatch(alertActions.errorAlert(\"You are not allowed to view this project\"));\r\n            break;\r\n          default:\r\n            setStatus(REQUEST.ERROR);\r\n        }\r\n      })\r\n\r\n      setStatus(REQUEST.PENDING);\r\n    }\r\n    else if(!ProjectAuthorizationService.isProjectOwner(auth.user, project)) {\r\n      history.push(RoutingConfig.projectPage.replace(\":id\", project.id));\r\n      dispatch(alertActions.errorAlert(\"You are not allowed to edit this project.\"));\r\n    }\r\n    else {\r\n      setStatus(REQUEST.SUCCESS);\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <>\r\n      <Seo pageTitle={`${project ? `Edit ${project.title}` : ''}`} />\r\n      {status === REQUEST.PENDING && <h2>Loading...</h2>}\r\n      {status === REQUEST.ERROR && <h2>Failed to load project.</h2>}\r\n      {status === REQUEST.SUCCESS && project && <ProjectEditForm project={project} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  projects: state.projects,\r\n  auth: state.auth,\r\n});\r\n\r\nconst ConnectedPage = connect(mapStateToProps)(EditProject);\r\n\r\nexport { ConnectedPage as EditProject };","D:\\inzynierka\\overseer-client\\src\\components\\forms\\ProjectEditForm.js",[],"D:\\inzynierka\\overseer-client\\src\\util\\ProjectAuthorizationService.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectMemberInvitationsRow.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectMembersRow.js",["448"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Row, Col, Form, FormGroup, Input, Label, Button, Table } from 'reactstrap';\r\nimport { useDebounce } from '../../hooks';\r\nimport { UserApi, ProjectApi } from '../../services';\r\nimport styles from './style.module.css';\r\nimport { alertActions, modalActions, projectActions } from '../../redux';\r\nimport { STATUS_CODES } from '../../status.constants';\r\nimport { ProjectAuthorizationService } from '../../util';\r\n\r\nconst formatJoinedAtDate = joinedAt => {\r\n  const date = new Date(joinedAt);\r\n\r\n  let month = '' + (date.getMonth() + 1),\r\n  day = '' + date.getDate(),\r\n  year = '' + date.getFullYear(),\r\n  hour = '' + date.getHours(),\r\n  minutes = '' + date.getMinutes();\r\n        \r\n  if(month.length < 2) \r\n    month = '0' + month;\r\n  if(day.length < 2) \r\n    day = '0' + day;\r\n  if(hour.length < 2)\r\n    hour = '0' + hour;\r\n  if(minutes.length < 2)\r\n    minutes = '0' + minutes;\r\n\r\n  return `${day}.${month}.${year}, ${hour}:${minutes}`;\r\n}\r\n\r\nexport const ProjectMembersRow = ({ project, user }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n  const dispatch = useDispatch();\r\n\r\n  // Effect for API call \r\n  useEffect(\r\n    () => {\r\n      if (debouncedSearchTerm) {\r\n        setIsSearching(true);\r\n        UserApi.getUsers(searchTerm)\r\n        .then(response => response.data)\r\n        .then(json => {\r\n          setIsSearching(false);\r\n          setResults(json.payload.items);\r\n        });\r\n      } else {\r\n        setResults([]);\r\n      }\r\n    },\r\n    [debouncedSearchTerm] // Only call effect if debounced search term changes\r\n  );\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const user = results.find(user => user.username === inputValue);\r\n    if(user) {\r\n      ProjectApi.inviteNewMember(project.id, user.username, user.email)\r\n      .then(() => {\r\n        ProjectApi.getProject(project.id)\r\n        .then(response => response.data)\r\n        .then(json => {\r\n          dispatch(projectActions.receiveProject(json.payload));\r\n        });\r\n        dispatch(alertActions.successAlert(\"Project member has been invited.\"));\r\n      })\r\n      .catch(error => {\r\n        const statusCode = error.request.status;\r\n        \r\n        switch(statusCode) {\r\n          case STATUS_CODES.BAD_REQUEST:\r\n            dispatch(alertActions.errorAlert(`User ${user.username} is already invited.`));\r\n            break;\r\n          default:\r\n            dispatch(alertActions.errorAlert(\"There was an error while inviting project member, try again later.\"));\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const modal = {\r\n    onConfirm: memberId => {\r\n      ProjectApi.removeProjectMemeber(project.id, memberId)\r\n      .then(() => {\r\n        ProjectApi.getProject(project.id)\r\n        .then(response => response.data)\r\n        .then(json => {\r\n          dispatch(projectActions.receiveProject(json.payload));\r\n        });\r\n        dispatch(alertActions.successAlert(\"Project member has been deleted.\"));\r\n        dispatch(modalActions.closeModal());\r\n      })\r\n      .catch(() => {\r\n        dispatch(alertActions.errorAlert(\"We encountered a problem, try again later.\"));\r\n        dispatch(modalActions.closeModal());\r\n      });\r\n    },\r\n    onCancel: () => {\r\n      dispatch(modalActions.closeModal());\r\n    },\r\n    title: \"Delete project member\",\r\n    description: \"Are you sure you want to delete this project member?\",\r\n  }\r\n\r\n  const openModal = (memberId) => {\r\n    dispatch(modalActions.openModal({\r\n      onConfirm: () => modal.onConfirm(memberId),\r\n      onCancel: modal.onCancel,\r\n      title: modal.title,\r\n      description: modal.description\r\n    }));\r\n  }\r\n  return(\r\n    <Row>\r\n      <Col>\r\n        <div className=\"mb-4\">\r\n          <h2>Project members</h2>\r\n          <hr className=\"solid\" />\r\n        </div>\r\n        {ProjectAuthorizationService.isProjectOwner(user, project) && <Form className=\"mb-4\" onSubmit={onSubmit}>\r\n          <Row form>\r\n            <Col lg=\"8\">\r\n              <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                <Label for=\"project_member_invitation_login\" hidden>Invite new member</Label>\r\n                <Input type=\"text\" name=\"login\" id=\"project_member_invitation_login\" value={inputValue} onChange={e => { setSearchTerm(e.target.value); setInputValue(e.target.value)} } placeholder=\"Invite new member...\" />\r\n                {searchTerm && isSearching === false && <div className={styles['autocomplete-wrapper']}>\r\n                  <ul className={styles['autocomplete-list']}>\r\n                    {results.map((user, index) => <li className={styles['autocomplete-item']} onClick={() => {setInputValue(user.username); setIsSearching(true)} } key={index}>{user.username}</li>)}\r\n                  </ul>\r\n                </div>}\r\n              </FormGroup>\r\n            </Col>\r\n            <Col lg=\"4\">\r\n              <Button>Invite</Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>}\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Username</th>\r\n              <th>Joined at</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {project.project_members.map((member, index) => \r\n              <tr key={member.id}>\r\n                <th scope=\"row\">{index + 1}</th>\r\n                <td>{member.username}</td>\r\n                <td>{formatJoinedAtDate(member.joined_at)}</td>\r\n                <td>{(ProjectAuthorizationService.isProjectOwner(user, project) && member.username !== user.username) && <Button className=\"btn btn-danger\" onClick={() => openModal(member.id)}>Delete member</Button> }</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","D:\\inzynierka\\overseer-client\\src\\hooks\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\hooks\\useDebounce.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\constants\\modal.constants.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\modal.reducer.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\actions\\modal.actions.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\ManageInvitation.js",[],"D:\\inzynierka\\overseer-client\\src\\util\\TextFormatter.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectApiKeysRow.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\Seo.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\constants\\error.constants.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\error.reducer.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\ProjectErrorsRow.js",["449","450","451","452","453"],"import React, { useState, useEffect } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Row, Col, Form, FormGroup, Input, Label, Button, Table, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\nimport { errorActions } from '../../redux/actions/error.actions';\r\nimport { REQUEST } from '../../request.constants';\r\nimport { RoutingConfig } from '../../Routes';\r\nimport { ProjectApi } from '../../services';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport styles from './style.module.css';\r\nimport { alertActions } from '../../redux';\r\n\r\nconst formatDate = occurredAt => {\r\n  const date = new Date(occurredAt);\r\n\r\n  let month = '' + (date.getMonth() + 1),\r\n  day = '' + date.getDate(),\r\n  year = '' + date.getFullYear(),\r\n  hour = '' + date.getHours(),\r\n  minutes = '' + date.getMinutes();\r\n        \r\n  if(month.length < 2) \r\n    month = '0' + month;\r\n  if(day.length < 2) \r\n    day = '0' + day;\r\n  if(hour.length < 2)\r\n    hour = '0' + hour;\r\n  if(minutes.length < 2)\r\n    minutes = '0' + minutes;\r\n\r\n  return `${day}.${month}.${year}, ${hour}:${minutes}`;\r\n}\r\n\r\nconst findMaxValue = array => {\r\n  let maxValue = 0;\r\n  for(let i = 0; i < array.length; i++) {\r\n    const errorCount = parseInt(array[i].error_count);\r\n\r\n    if(maxValue < errorCount) {\r\n      maxValue = errorCount;\r\n    }\r\n  }\r\n\r\n  return Math.ceil(maxValue / 10) * 10;\r\n}\r\n\r\nexport const ProjectErrorsRow = ({ project, errors, location }) => {\r\n  const [status,setStatus] = useState(REQUEST.PENDING);\r\n  const dispatch = useDispatch();\r\n  const urlParams = new URLSearchParams(location.search);\r\n  const history = useHistory();\r\n  const criteria = {\r\n    search: urlParams.get(\"search\") || \"\",\r\n    date_from: urlParams.get(\"date_from\") || \"\",\r\n    date_to: urlParams.get(\"date_to\") || \"\",\r\n  }\r\n  const { register, handleSubmit} = useForm({\r\n    defaultValues: {\r\n      search: criteria.search,\r\n      date_from: urlParams.get(\"date_from\") || \"\",\r\n      date_to: urlParams.get(\"date_to\") || \"\"\r\n    }\r\n  });\r\n  \r\n\r\n  const requestErrors = () => {\r\n    const requestCriteria = {...criteria};\r\n\r\n    if(criteria.date_from) {\r\n      const date = new Date(criteria.date_from + \"T00:00\");\r\n      requestCriteria.date_from = date.getTime() / 1000;\r\n    }\r\n\r\n    if(criteria.date_to) {\r\n      const date = new Date(criteria.date_to + \"T00:00\");\r\n      requestCriteria.date_to = date.getTime() / 1000;\r\n    }\r\n    \r\n    ProjectApi.getErrors(project.id, {\r\n      page: urlParams.get(\"errors_page\") || 1,\r\n      ...requestCriteria,\r\n    })\r\n    .then(response => response.data)\r\n    .then(json => {\r\n      setStatus(REQUEST.SUCCESS);\r\n      dispatch(errorActions.receiveErrors(json.payload));\r\n    })\r\n    .catch(error => {\r\n      setStatus(REQUEST.ERROR);\r\n    });\r\n  }\r\n\r\n  const requestChartData = () => {\r\n    const requestCriteria = {...criteria};\r\n\r\n    if(criteria.date_from) {\r\n      const date = new Date(criteria.date_from + \"T00:00\");\r\n      requestCriteria.date_from = date.getTime() / 1000;\r\n    }\r\n\r\n    if(criteria.date_to) {\r\n      const date = new Date(criteria.date_to + \"T00:00\");\r\n      requestCriteria.date_to = date.getTime() / 1000;\r\n    }\r\n    \r\n    ProjectApi.getChartData(project.id, {\r\n      page: urlParams.get(\"errors_page\") || 1,\r\n      ...requestCriteria,\r\n    })\r\n    .then(response => response.data)\r\n    .then(json => {\r\n      setStatus(REQUEST.SUCCESS);\r\n      dispatch(errorActions.receiveChartData(json.payload));\r\n    })\r\n    .catch(error => {\r\n      setStatus(REQUEST.ERROR);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    requestErrors();\r\n    requestChartData();\r\n  }, [urlParams.get(\"errors_page\"), urlParams.get(\"search\"), urlParams.get(\"date_from\"), urlParams.get(\"date_to\")]);\r\n\r\n  const onSubmit = data => {    \r\n    history.replace(`${RoutingConfig.projectPage.replace(\":id\", project.id)}?errors_page=1&search=${data.search}&date_from=${data.date_from}&date_to=${data.date_to}`);\r\n  }\r\n\r\n  function formatXAxis(tickItem) {\r\n    const date = new Date(tickItem);\r\n    let month = '' + (date.getMonth() + 1),\r\n      day = '' + date.getDate(),\r\n      year = '' + date.getFullYear();\r\n        \r\n    if(month.length < 2) \r\n      month = '0' + month;\r\n    if(day.length < 2) \r\n      day = '0' + day;\r\n\r\n    return `${day}.${month}.${year}`;\r\n  }\r\n\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload) {\r\n      return (\r\n        <div className={styles['custom-tooltip']}>\r\n          <p className={styles['label']}>{`Exceptions count occured on ${formatXAxis(label)}: `}<strong>{payload[0].value}</strong></p>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    return null;\r\n  };\r\n\r\n  const downloadJson = e => {\r\n    e.preventDefault()\r\n    const requestCriteria = {...criteria};\r\n\r\n    if(criteria.date_from) {\r\n      const date = new Date(criteria.date_from + \"T00:00\");\r\n      requestCriteria.date_from = date.getTime() / 1000;\r\n    }\r\n\r\n    if(criteria.date_to) {\r\n      const date = new Date(criteria.date_to + \"T00:00\");\r\n      requestCriteria.date_to = date.getTime() / 1000;\r\n    }\r\n    ProjectApi.getErrorsFile(project.id, 'JSON', requestCriteria)\r\n    .then(response => response.data)\r\n    .then(json => {\r\n      window.location = process.env.REACT_APP_BACKEND_URL + `/download?file_path=${encodeURIComponent(json.payload.file)}`;\r\n    })\r\n    .catch(error => {\r\n      dispatch(alertActions.errorAlert(\"Failed to download the file, try again later.\"));\r\n    })\r\n  };\r\n\r\n  const downloadCsv = e => {\r\n    e.preventDefault()\r\n    const requestCriteria = {...criteria};\r\n\r\n    if(criteria.date_from) {\r\n      const date = new Date(criteria.date_from + \"T00:00\");\r\n      requestCriteria.date_from = date.getTime() / 1000;\r\n    }\r\n\r\n    if(criteria.date_to) {\r\n      const date = new Date(criteria.date_to + \"T00:00\");\r\n      requestCriteria.date_to = date.getTime() / 1000;\r\n    }\r\n    ProjectApi.getErrorsFile(project.id, 'CSV', requestCriteria)\r\n    .then(response => response.data)\r\n    .then(json => {\r\n      window.location = process.env.REACT_APP_API_URL + `/download?file_path=${encodeURIComponent(json.payload.file)}`;\r\n    })\r\n    .catch(error => {\r\n      dispatch(alertActions.errorAlert(\"Failed to download the file, try again later.\"));\r\n    })\r\n  };\r\n\r\n  return(\r\n    <Row>\r\n      <Col>\r\n        <div className=\"mb-4\">\r\n          <h2>Project errors</h2>\r\n          <hr className=\"solid\" />\r\n        </div>\r\n        {status === REQUEST.PENDING && <p>Loading...</p> }\r\n        {status === REQUEST.ERROR && <p>Failed to load errors.</p> }\r\n        {status === REQUEST.SUCCESS &&\r\n          <>\r\n            {errors.chartData.length > 0 &&\r\n            <ResponsiveContainer width=\"100%\" height={500}>\r\n              <LineChart data={errors.chartData}>\r\n                  <CartesianGrid />\r\n                  <XAxis dataKey=\"date\" tickFormatter={formatXAxis} />\r\n                  <YAxis allowDecimals={false} domain={[0, findMaxValue(errors.chartData)]} />\r\n                  <Tooltip content={<CustomTooltip />} />\r\n                  <Legend />\r\n                  <Line name=\"Error count\" type=\"monotone\" dataKey=\"error_count\" stroke=\"#8884d8\" strokeWidth={3} />\r\n              </LineChart>\r\n            </ResponsiveContainer>}\r\n            <Form onSubmit={handleSubmit(onSubmit)} className=\"mb-4\">\r\n              <Row>\r\n                <Col lg=\"8\">\r\n                  <FormGroup>\r\n                    <Label for=\"error_search_form_search\">Search term</Label>\r\n                    <Input type=\"text\" name=\"search\" id=\"error_search_form_search\" innerRef={register} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"4\">\r\n                  <Label for=\"error_search_form_search\">Occurred from</Label>\r\n                  <Input type=\"date\" name=\"date_from\" id=\"error_search_form_date_from\" innerRef={register} />\r\n                </Col>\r\n                <Col lg=\"4\">\r\n                  <Label for=\"error_search_form_search\">Occurred to</Label>\r\n                  <Input type=\"date\" name=\"date_to\" id=\"error_search_form_date_to\" innerRef={register} />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Button color=\"primary\" className=\"mr-2\">Filter</Button>\r\n              {errors.count > 0 && <Button color=\"secondary\" className=\"mr-2\" onClick={e => downloadJson(e)}>Download JSON</Button>}\r\n              {errors.count > 0 && <Button color=\"info\" onClick={e => downloadCsv(e)}>Download CSV</Button>}\r\n            </Form>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Exception class</th>\r\n                  <th>Error code</th>\r\n                  <th>Occured at</th>\r\n                  <th>File</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {errors.items.map((error, index) => \r\n                  <tr key={error.id}>\r\n                    <th scope=\"row\">{index + 1 + (errors.page - 1) * 10}</th>\r\n                    <td>{error.class}</td>\r\n                    <td>{error.error_code}</td>\r\n                    <td>{formatDate(error.occurred_at)}</td>\r\n                    <td>{error.file}</td>\r\n                    <td><Link to={RoutingConfig.errorDetails.replace(\":id\", project.id).replace(\":error_id\", error.id)}>Show</Link></td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n            {errors.count > 10 &&\r\n              <Pagination>\r\n                <PaginationItem disabled={errors.page === 1}>\r\n                  <PaginationLink first tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?errors_page=1`} />\r\n                </PaginationItem>\r\n                <PaginationItem disabled={errors.page === 1}>\r\n                  <PaginationLink previous tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?errors_page=${errors.page - 1}`} />\r\n                </PaginationItem>\r\n                <PaginationItem disabled={errors.page === Math.ceil(errors.count / 10)}>\r\n                  <PaginationLink next tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?errors_page=${errors.page + 1}`} />\r\n                </PaginationItem>\r\n                <PaginationItem disabled={errors.page === Math.ceil(errors.count / 10)}>\r\n                  <PaginationLink last tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?errors_page=${Math.ceil(errors.count / 10)}`} />\r\n                </PaginationItem>\r\n              </Pagination>\r\n            }\r\n          </>\r\n        }\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","D:\\inzynierka\\overseer-client\\src\\redux\\actions\\error.actions.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\Error.js",["454"],"import React, { useEffect, useState } from 'react'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Seo, ErrorCard } from '../components';\r\nimport { alertActions } from '../redux';\r\nimport { errorActions } from '../redux/actions/error.actions';\r\nimport { REQUEST } from '../request.constants';\r\nimport { RoutingConfig } from '../Routes';\r\nimport { ProjectApi } from '../services';\r\nimport { STATUS_CODES } from '../status.constants';\r\n\r\nconst Error = ({ errors, match }) => {\r\n  const projectId = match.params.id;\r\n  const errorId = match.params.error_id;\r\n  const [status,setStatus] = useState(REQUEST.PENDING);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const error = errors.currentError;\r\n\r\n  useEffect(() => {\r\n    if(!error || error.id !== errorId) {\r\n      ProjectApi.getError(projectId, errorId)\r\n      .then(response => response.data)\r\n      .then(json => {\r\n        dispatch(errorActions.receiveError(json.payload));\r\n        setStatus(REQUEST.SUCCESS);\r\n      })\r\n      .catch(error => {\r\n        const statusCode = error.request.status;\r\n        switch(statusCode) {\r\n          case STATUS_CODES.FORBIDDEN:\r\n            history.push(RoutingConfig.account);\r\n            dispatch(alertActions.errorAlert(\"You are not allowed to view this error\"));\r\n            break;\r\n          default:\r\n            setStatus(REQUEST.ERROR);\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      setStatus(REQUEST.SUCCESS);\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <>\r\n      {<Seo pageTitle=\"Error\" />}\r\n      {status === REQUEST.PENDING && <h2>Loading...</h2>}\r\n      {status === REQUEST.ERROR && <h2>Failed to load project.</h2>}\r\n      {status === REQUEST.SUCCESS && error && <ErrorCard error={error} projectId={projectId} /> }\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n})\r\n\r\nconst ConnectedPage = connect(mapStateToProps)(Error);\r\n\r\nexport { ConnectedPage as Error };","D:\\inzynierka\\overseer-client\\src\\components\\ErrorCard\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\ErrorCard\\ErrorCard.js",[],"D:\\inzynierka\\overseer-client\\src\\services\\IntegrationApi.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\actions\\webhook-integration.actions.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\constants\\webhook-integration.constants.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\webhook-integration.reducer.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\WebhookIntegrationsRow.js",["455","456"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Table, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\nimport { webhookIntegrationActions } from '../../redux';\r\nimport { REQUEST } from '../../request.constants';\r\nimport { RoutingConfig } from '../../Routes';\r\nimport { IntegrationApi } from '../../services';\r\nimport { ProjectAuthorizationService } from '../../util';\r\n\r\nexport const WebhookIntegrationsRow = ({project, integrations, location, user}) => {\r\n  const [status, setStatus] = useState(REQUEST.PENDING);\r\n  const urlParams = new URLSearchParams(location.search);\r\n  const dispatch = useDispatch();\r\n\r\n  const requestIntegrations = () => {\r\n    IntegrationApi.getWebhookIntegrations(project.id, urlParams.get(\"webhook_integrations_page\") || 1)\r\n    .then(response => response.data)\r\n    .then(json => {\r\n      dispatch(webhookIntegrationActions.receiveIntegrationList(json.payload));\r\n      setStatus(REQUEST.SUCCESS);\r\n    })\r\n    .catch(error => {\r\n      setStatus(REQUEST.ERROR);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    requestIntegrations();\r\n  }, [urlParams.get(\"webhook_integrations_page\")]);\r\n  \r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <div className=\"mb-4\">\r\n          <h2>Webhook integrations</h2>\r\n          <hr className=\"solid\" />\r\n        </div>\r\n        {status === REQUEST.PENDING && <p>Loading...</p> }\r\n        {status === REQUEST.ERROR && <p>Failed to load errors.</p> }\r\n        {status === REQUEST.SUCCESS &&\r\n        <>\r\n        { ProjectAuthorizationService.isProjectOwner(user, project) && <Link className=\"btn btn-primary mb-4\" to={RoutingConfig.newWebhookIntegration.replace(\":id\", project.id)}>Create new webhook integration</Link>}\r\n        { integrations.count === 0 ? <p>There are no integrations to display.</p> :\r\n          <>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>URL</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {integrations.items.map((integration, index) => \r\n                  <tr key={integration.id}>\r\n                    <th scope=\"row\">{index + 1 + (integrations.page - 1) * 10}</th>\r\n                    <td>{integration.url}</td>\r\n                    <td><Link to={RoutingConfig.webhookintegration.replace(\":id\", project.id).replace(\":integration_id\", integration.id)}>Show</Link></td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n            {integrations.count > 10 &&\r\n              <Pagination>\r\n                <PaginationItem disabled={integrations.page === 1}>\r\n                  <PaginationLink first tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?webhook_integrations_page=1`} />\r\n                </PaginationItem>\r\n                <PaginationItem disabled={integrations.page === 1}>\r\n                  <PaginationLink previous tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?webhook_integrations_page=${integrations.page - 1}`} />\r\n                </PaginationItem>\r\n                <PaginationItem disabled={integrations.page === Math.ceil(integrations.count / 10)}>\r\n                  <PaginationLink next tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?webhook_integrations_page=${integrations.page + 1}`} />\r\n                </PaginationItem>\r\n                <PaginationItem disabled={integrations.page === Math.ceil(integrations.count / 10)}>\r\n                  <PaginationLink last tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?webhook_integrations_page=${Math.ceil(integrations.count / 10)}`} />\r\n                </PaginationItem>\r\n              </Pagination>\r\n            }\r\n          </>\r\n          }\r\n        </>\r\n        }\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","D:\\inzynierka\\overseer-client\\src\\pages\\NewWebhookIntegration.js",["457"],"import React, { useState, useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Seo, WebhookItegrationForm } from '../components';\r\nimport { alertActions, projectActions } from '../redux';\r\nimport { REQUEST } from '../request.constants';\r\nimport { RoutingConfig } from '../Routes';\r\nimport { ProjectApi } from '../services';\r\nimport { STATUS_CODES } from '../status.constants';\r\nimport { ProjectAuthorizationService } from '../util';\r\n\r\nconst NewWebhookIntergration = ({ projects, match, auth }) => {\r\n  const projectId = match.params.id;\r\n  const project = projects.currentProject;\r\n  const [status,setStatus] = useState();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!project || project.id !== projectId) {\r\n      ProjectApi.getProject(projectId)\r\n      .then(response => response.data)\r\n      .then(json => {\r\n        dispatch(projectActions.receiveProject(json.payload));\r\n\r\n        if(!ProjectAuthorizationService.isProjectOwner(auth.user, json.payload)) {\r\n          history.push(RoutingConfig.projectPage.replace(\":id\", json.payload.id));\r\n          dispatch(alertActions.errorAlert(\"You are not allowed to create webhook integration in this project\"));\r\n        }\r\n        else {\r\n          setStatus(REQUEST.SUCCESS);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        const statusCode = error.request.status;\r\n\r\n        switch(statusCode) {\r\n          case STATUS_CODES.FORBIDDEN:\r\n            history.push(RoutingConfig.account);\r\n            dispatch(alertActions.errorAlert(\"You are not allowed to create webhook integration in this project\"));\r\n            break;\r\n          default:\r\n            setStatus(REQUEST.ERROR);\r\n        }\r\n      })\r\n\r\n      setStatus(REQUEST.PENDING);\r\n    }\r\n    else {\r\n      setStatus(REQUEST.SUCCESS);\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <>\r\n      {<Seo pageTitle=\"New webhook integration\" />}\r\n      {status === REQUEST.PENDING && <h2>Loading...</h2>}\r\n      {status === REQUEST.ERROR && <h2>Failed to load project.</h2>}\r\n      {status === REQUEST.SUCCESS && project && <WebhookItegrationForm project={project} /> }\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  projects: state.projects,\r\n});\r\n\r\nconst ConnectedPage = connect(mapStateToProps)(NewWebhookIntergration);\r\n\r\nexport { ConnectedPage as NewWebhookIntergration };","D:\\inzynierka\\overseer-client\\src\\components\\forms\\WebhookIntegrationForm.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\WebhookIntegration.js",["458"],"import React, { useState, useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Seo, WebhookIntegrationCard } from '../components';\r\nimport { alertActions, projectActions, webhookIntegrationActions } from '../redux';\r\nimport { REQUEST } from '../request.constants';\r\nimport { RoutingConfig } from '../Routes';\r\nimport { IntegrationApi, ProjectApi } from '../services';\r\nimport { STATUS_CODES } from '../status.constants';\r\n\r\nconst WebhookIntegration = ({ projects, webhookIntegrations, match, auth, location }) => {\r\n  const projectId = match.params.id;\r\n  const integrationId = match.params.integration_id;\r\n  const [status,setStatus] = useState(REQUEST.PENDING);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const integration = webhookIntegrations.currentIntegration;\r\n  const project = projects.currentProject;\r\n\r\n  useEffect(() => {\r\n    if(!integration || integration.id !== integrationId) {\r\n      IntegrationApi.getWebhookIntegration(integrationId)\r\n      .then(response => response.data)\r\n      .then(json => {\r\n        const { payload } = json;\r\n        if(payload.project_id !== projectId) {\r\n          history.push(RoutingConfig.account);\r\n          dispatch(alertActions.errorAlert(\"Invalid webhook integration\"));\r\n          return;\r\n        }\r\n\r\n        if(!project || project.id !== projectId) {\r\n          ProjectApi.getProject(projectId)\r\n          .then(response => response.data)\r\n          .then(json => {\r\n            dispatch(projectActions.receiveProject(json.payload));\r\n            setStatus(REQUEST.SUCCESS);\r\n          })\r\n          .catch(error => {\r\n            setStatus(REQUEST.ERROR);\r\n          })\r\n        }\r\n        else {\r\n          setStatus(REQUEST.SUCCESS);\r\n        }\r\n        dispatch(webhookIntegrationActions.receiveIntegrationDetails(payload));        \r\n      })\r\n      .catch(error => {\r\n        const statusCode = error.request.status;\r\n        switch(statusCode) {\r\n          case STATUS_CODES.FORBIDDEN:\r\n            history.push(RoutingConfig.account);\r\n            dispatch(alertActions.errorAlert(\"You are not allowed to view this integration\"));\r\n            break;\r\n          default:\r\n            setStatus(REQUEST.ERROR);\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      setStatus(REQUEST.SUCCESS);\r\n    }\r\n  });\r\n\r\n  return(\r\n    <>\r\n      {<Seo pageTitle=\"Webhook integration\" />}\r\n      {status === REQUEST.PENDING && <h2>Loading...</h2>}\r\n      {status === REQUEST.ERROR && <h2>Failed to load project.</h2>}\r\n      {status === REQUEST.SUCCESS && (integration && project) && <WebhookIntegrationCard location={location} project={project} integration={integration} user={auth.user} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  projects: state.projects,\r\n  webhookIntegrations: state.webhookIntegrations,\r\n})\r\n\r\nconst ConnectedPage = connect(mapStateToProps)(WebhookIntegration);\r\n\r\nexport { ConnectedPage as WebhookIntegration };","D:\\inzynierka\\overseer-client\\src\\components\\WebhookIntegrationCard\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\WebhookIntegrationCard\\WebhookIntegrationCard.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\WebhookIntegrationCard\\WebhookIntegrationTitleRow.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\EditWebhookIntegration.js",["459","460"],"import React, { useState, useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Seo, WebhookIntegrationCard, WebhookItegrationForm } from '../components';\r\nimport { alertActions, projectActions, webhookIntegrationActions } from '../redux';\r\nimport { REQUEST } from '../request.constants';\r\nimport { RoutingConfig } from '../Routes';\r\nimport { IntegrationApi, ProjectApi } from '../services';\r\nimport { STATUS_CODES } from '../status.constants';\r\n\r\nconst EditWebhookIntegration = ({ projects, webhookIntegrations, match, auth }) => {\r\n  const projectId = match.params.id;\r\n  const integrationId = match.params.integration_id;\r\n  const [status,setStatus] = useState(REQUEST.PENDING);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const integration = webhookIntegrations.currentIntegration;\r\n  const project = projects.currentProject;\r\n\r\n  useEffect(() => {\r\n    if(!integration || integration.id !== integrationId) {\r\n      IntegrationApi.getWebhookIntegration(integrationId)\r\n      .then(response => response.data)\r\n      .then(json => {\r\n        const { payload } = json;\r\n        if(payload.project_id !== projectId) {\r\n          history.push(RoutingConfig.account);\r\n          dispatch(alertActions.errorAlert(\"Invalid webhook integration\"));\r\n          return;\r\n        }\r\n\r\n        if(!project || project.id !== projectId) {\r\n          ProjectApi.getProject(projectId)\r\n          .then(response => response.data)\r\n          .then(json => {\r\n            dispatch(projectActions.receiveProject(json.payload));\r\n            setStatus(REQUEST.SUCCESS);\r\n          })\r\n          .catch(error => {\r\n            setStatus(REQUEST.ERROR);\r\n          })\r\n        }\r\n        else {\r\n          setStatus(REQUEST.SUCCESS);\r\n        }\r\n        dispatch(webhookIntegrationActions.receiveIntegrationDetails(payload));        \r\n      })\r\n      .catch(error => {\r\n        const statusCode = error.request.status;\r\n        switch(statusCode) {\r\n          case STATUS_CODES.FORBIDDEN:\r\n            history.push(RoutingConfig.account);\r\n            dispatch(alertActions.errorAlert(\"You are not allowed to view this error\"));\r\n            break;\r\n          default:\r\n            setStatus(REQUEST.ERROR);\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      setStatus(REQUEST.SUCCESS);\r\n    }\r\n  });\r\n\r\n  return(\r\n    <>\r\n      {<Seo pageTitle=\"Edit webhook integration\" />}\r\n      {status === REQUEST.PENDING && <h2>Loading...</h2>}\r\n      {status === REQUEST.ERROR && <h2>Failed to load project.</h2>}\r\n      {status === REQUEST.SUCCESS && (integration && project) && <WebhookItegrationForm integration={integration} project={project} /> }\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  projects: state.projects,\r\n  webhookIntegrations: state.webhookIntegrations,\r\n})\r\n\r\nconst ConnectedPage = connect(mapStateToProps)(EditWebhookIntegration);\r\n\r\nexport { ConnectedPage as EditWebhookIntegration };","D:\\inzynierka\\overseer-client\\src\\components\\WebhookIntegrationCard\\WebhookIntegrationMessagesRow.js",["461","462"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, Pagination, PaginationLink, PaginationItem } from 'reactstrap';\r\nimport { REQUEST } from '../../request.constants';\r\nimport { RoutingConfig } from '../../Routes';\r\nimport { IntegrationApi } from '../../services';\r\nimport styles from './style.module.css';\r\n\r\nconst getJsonIndented = (obj) => JSON.stringify(obj, null, 4);\r\n\r\nconst formatDate = dateString => {\r\n  const date = new Date(dateString);\r\n\r\n  let month = '' + (date.getMonth() + 1),\r\n  day = '' + date.getDate(),\r\n  year = '' + date.getFullYear(),\r\n  hour = '' + date.getHours(),\r\n  minutes = '' + date.getMinutes();\r\n        \r\n  if(month.length < 2) \r\n    month = '0' + month;\r\n  if(day.length < 2) \r\n    day = '0' + day;\r\n  if(hour.length < 2)\r\n    hour = '0' + hour;\r\n  if(minutes.length < 2)\r\n    minutes = '0' + minutes;\r\n\r\n  return `${day}.${month}.${year}, ${hour}:${minutes}`;\r\n}\r\n\r\nexport const WebhookIntegrationMessagesRow = ({ integration, location, project }) => {\r\n  const [messages, setMessages] = useState({\r\n    page: 1,\r\n    count: 0,\r\n    items: [],\r\n  });\r\n  const [status, setStatus] = useState(REQUEST.PENDING);\r\n  const urlParams = new URLSearchParams(location.search);\r\n  const [activeMessagesIndex, setActiveMessageIndex] = useState(-1);\r\n\r\n  const requestMessages = (page) => {\r\n    IntegrationApi.getWebhookIntegrationMessages(integration.id, page)\r\n    .then(response => response.data)\r\n    .then(json => {\r\n      setMessages({\r\n        page: json.payload.page,\r\n        count: json.payload.count,\r\n        items: json.payload.items,\r\n      });\r\n      setStatus(REQUEST.SUCCESS);\r\n      setActiveMessageIndex(-1);\r\n    })\r\n    .catch(error => {\r\n      setStatus(REQUEST.ERROR);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    console.log(urlParams.get(\"page\"));\r\n    requestMessages(urlParams.get(\"page\") || 1)\r\n  }, [urlParams.get(\"page\")]);\r\n\r\n  return(\r\n    <>\r\n      <div className=\"mb-4\">\r\n        <h3>Messages</h3>\r\n        <hr className=\"solid\"/>\r\n      </div>\r\n      {status === REQUEST.PENDING && <p>Loading...</p> }\r\n      {status === REQUEST.ERROR && <p>Failed to load messages</p> }\r\n      {status === REQUEST.SUCCESS && \r\n        <>\r\n          {messages.count === 0 ? <p>There are no messages to display</p> : messages.items.map((message, index) =>\r\n            <div className=\"mb-2\" key={index}>\r\n              <p style={{cursor: \"pointer\"}} onClick={() => activeMessagesIndex === index ? setActiveMessageIndex(-1) : setActiveMessageIndex(index)}><strong>{`#${index + 1 + (messages.page - 1) * 10} ${message.json.exception.class}`}</strong></p>\r\n              {activeMessagesIndex === index && \r\n                <>\r\n                  <p>Status: <Badge color={message.status === \"error\" ? \"danger\" : message.status === \"unprocessed\" ? \"secondary\" : \"success\"}>{message.status}</Badge> </p>\r\n                  <p>Last delivery attempt: <strong>{message.last_attempt ? formatDate(message.last_attempt) : '-'}</strong></p>\r\n                  <p>Next delivery attempt: <strong>{message.next_attempt ? formatDate(message.next_attempt) : '-'}</strong></p>\r\n                  <p>Delivery attempts: <strong>{message.attempt_count}</strong></p>\r\n                  <div>\r\n                    <p><strong>JSON:</strong></p>\r\n                    <pre className={styles.json}>{getJsonIndented(message.json)}</pre>\r\n                  </div>\r\n                  <p>Status code: <strong>{message.status_code}</strong></p>\r\n                  <div>\r\n                    <p className=\"mb-1\">Response</p>\r\n                    <p className=\"pl-2\">{message.response}</p>\r\n                  </div>\r\n                </>\r\n              }\r\n            </div>\r\n          )}\r\n          {messages.count > 10 && <Pagination>\r\n            <PaginationItem disabled={messages.page === 1}>\r\n              <PaginationLink first tag={Link} to={RoutingConfig.webhookintegration.replace(\":id\", project.id).replace(\":integration_id\", integration.id) + `?page=1`} />\r\n            </PaginationItem>\r\n            <PaginationItem disabled={messages.page === 1}>\r\n              <PaginationLink previous tag={Link} to={RoutingConfig.webhookintegration.replace(\":id\", project.id).replace(\":integration_id\", integration.id) + `?page=${messages.page - 1}`} />\r\n            </PaginationItem>\r\n            <PaginationItem disabled={messages.page === Math.ceil(messages.count / 10)}>\r\n              <PaginationLink next tag={Link} to={RoutingConfig.webhookintegration.replace(\":id\", project.id).replace(\":integration_id\", integration.id) + `?page=${messages.page + 1}`} />\r\n            </PaginationItem>\r\n            <PaginationItem disabled={messages.page === Math.ceil(messages.count / 10)}>\r\n              <PaginationLink last tag={Link} to={RoutingConfig.webhookintegration.replace(\":id\", project.id).replace(\":integration_id\", integration.id) + `?page=${Math.ceil(messages.count / 10)}`} />\r\n            </PaginationItem>\r\n          </Pagination>}\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}","D:\\inzynierka\\overseer-client\\src\\components\\TelegramIntegrationCard\\index.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\TelegramIntegrationCard\\TelegramIntegrationCard.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\constants\\telegram-integration.constants.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\actions\\telegram-integration.actions.js",[],"D:\\inzynierka\\overseer-client\\src\\redux\\reducers\\telegram-integration.reducer.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\ProjectCard\\TelegramIntegrationsRow.js",["463","464"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, Row, Table, Pagination, PaginationItem, PaginationLink } from 'reactstrap';\r\nimport { telegramIntegrationActions } from '../../redux';\r\nimport { REQUEST } from '../../request.constants';\r\nimport { RoutingConfig } from '../../Routes';\r\nimport { IntegrationApi } from '../../services';\r\nimport { ProjectAuthorizationService } from '../../util';\r\n\r\nexport const TelegramIntegrationsRow = ({project, integrations, location, user}) => {\r\n  const [status, setStatus] = useState(REQUEST.PENDING);\r\n  const urlParams = new URLSearchParams(location.search);\r\n  const dispatch = useDispatch();\r\n\r\n  const requestIntegrations = () => {\r\n    IntegrationApi.getTelegramIntegrations(project.id, urlParams.get(\"telegram_integrations_page\") || 1)\r\n    .then(response => response.data)\r\n    .then(json => {\r\n      dispatch(telegramIntegrationActions.receiveIntegrationList(json.payload));\r\n      setStatus(REQUEST.SUCCESS);\r\n    })\r\n    .catch(error => {\r\n      setStatus(REQUEST.ERROR);\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    requestIntegrations();\r\n  }, [urlParams.get(\"telegram_integrations_page\")]);\r\n  \r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <div className=\"mb-4\">\r\n          <h2>Telegram integrations</h2>\r\n          <hr className=\"solid\" />\r\n        </div>\r\n        {status === REQUEST.PENDING && <p>Loading...</p> }\r\n        {status === REQUEST.ERROR && <p>Failed to load errors.</p> }\r\n        {status === REQUEST.SUCCESS &&\r\n        <>\r\n        { ProjectAuthorizationService.isProjectOwner(user, project) && <Link className=\"btn btn-primary mb-4\" to={RoutingConfig.newTelegramIntegration.replace(\":id\", project.id)}>Create new telegram integration</Link>}\r\n        { integrations.count === 0 ? <p>There are no integrations to display.</p> :\r\n          <>\r\n            <Table>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Bot ID</th>\r\n                  <th>Chat ID</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {integrations.items.map((integration, index) => \r\n                  <tr key={integration.id}>\r\n                    <th scope=\"row\">{index + 1 + (integrations.page - 1) * 10}</th>\r\n                    <td>{integration.bot_id}</td>\r\n                    <td>{integration.chat_id}</td>\r\n                    <td><Link to={RoutingConfig.telegramintegration.replace(\":id\", project.id).replace(\":integration_id\", integration.id)}>Show</Link></td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n            {integrations.count > 10 &&\r\n              <Pagination>\r\n                <PaginationItem disabled={integrations.page === 1}>\r\n                  <PaginationLink first tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?telegram_integrations_page=1`} />\r\n                </PaginationItem>\r\n                <PaginationItem disabled={integrations.page === 1}>\r\n                  <PaginationLink previous tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?telegram_integrations_page=${integrations.page - 1}`} />\r\n                </PaginationItem>\r\n                <PaginationItem disabled={integrations.page === Math.ceil(integrations.count / 10)}>\r\n                  <PaginationLink next tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?telegram_integrations_page=${integrations.page + 1}`} />\r\n                </PaginationItem>\r\n                <PaginationItem disabled={integrations.page === Math.ceil(integrations.count / 10)}>\r\n                  <PaginationLink last tag={Link} to={RoutingConfig.projectPage.replace(\":id\", project.id) + `?telegram_integrations_page=${Math.ceil(integrations.count / 10)}`} />\r\n                </PaginationItem>\r\n              </Pagination>\r\n            }\r\n          </>\r\n          }\r\n        </>\r\n        }\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","D:\\inzynierka\\overseer-client\\src\\pages\\NewTelegramIntegration.js",["465"],"import React, { useState, useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Seo, TelegramItegrationForm } from '../components';\r\nimport { alertActions, projectActions } from '../redux';\r\nimport { REQUEST } from '../request.constants';\r\nimport { RoutingConfig } from '../Routes';\r\nimport { ProjectApi } from '../services';\r\nimport { STATUS_CODES } from '../status.constants';\r\nimport { ProjectAuthorizationService } from '../util';\r\n\r\nconst NewTelegramIntergration = ({ projects, match, auth }) => {\r\n  const projectId = match.params.id;\r\n  const project = projects.currentProject;\r\n  const [status,setStatus] = useState();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(!project || project.id !== projectId) {\r\n      ProjectApi.getProject(projectId)\r\n      .then(response => response.data)\r\n      .then(json => {\r\n        dispatch(projectActions.receiveProject(json.payload));\r\n\r\n        if(!ProjectAuthorizationService.isProjectOwner(auth.user, json.payload)) {\r\n          history.push(RoutingConfig.projectPage.replace(\":id\", json.payload.id));\r\n          dispatch(alertActions.errorAlert(\"You are not allowed to create telegram integration in this project\"));\r\n        }\r\n        else {\r\n          setStatus(REQUEST.SUCCESS);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        const statusCode = error.request.status;\r\n\r\n        switch(statusCode) {\r\n          case STATUS_CODES.FORBIDDEN:\r\n            history.push(RoutingConfig.account);\r\n            dispatch(alertActions.errorAlert(\"You are not allowed to create telegram integration in this project\"));\r\n            break;\r\n          default:\r\n            setStatus(REQUEST.ERROR);\r\n        }\r\n      })\r\n\r\n      setStatus(REQUEST.PENDING);\r\n    }\r\n    else {\r\n      setStatus(REQUEST.SUCCESS);\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <>\r\n      {<Seo pageTitle=\"New telegram integration\" />}\r\n      {status === REQUEST.PENDING && <h2>Loading...</h2>}\r\n      {status === REQUEST.ERROR && <h2>Failed to load project.</h2>}\r\n      {status === REQUEST.SUCCESS && project && <TelegramItegrationForm project={project} /> }\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  projects: state.projects,\r\n});\r\n\r\nconst ConnectedPage = connect(mapStateToProps)(NewTelegramIntergration);\r\n\r\nexport { ConnectedPage as NewTelegramIntergration };","D:\\inzynierka\\overseer-client\\src\\components\\forms\\TelegramIntegrationForm.js",[],"D:\\inzynierka\\overseer-client\\src\\components\\TelegramIntegrationCard\\TelegramIntegrationTitleRow.js",[],"D:\\inzynierka\\overseer-client\\src\\pages\\TelegramIntegration.js",["466"],"import React, { useState, useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Seo, TelegramIntegrationCard } from '../components';\r\nimport { alertActions, projectActions, telegramIntegrationActions } from '../redux';\r\nimport { REQUEST } from '../request.constants';\r\nimport { RoutingConfig } from '../Routes';\r\nimport { IntegrationApi, ProjectApi } from '../services';\r\nimport { STATUS_CODES } from '../status.constants';\r\n\r\nconst TelegramIntegration = ({ projects, telegramIntegrations, match, auth, location }) => {\r\n  const projectId = match.params.id;\r\n  const integrationId = match.params.integration_id;\r\n  const [status,setStatus] = useState(REQUEST.PENDING);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const integration = telegramIntegrations.currentIntegration;\r\n  const project = projects.currentProject;\r\n\r\n  useEffect(() => {\r\n    if(!integration || integration.id !== integrationId) {\r\n      IntegrationApi.getTelegramIntegration(integrationId)\r\n      .then(response => response.data)\r\n      .then(json => {\r\n        const { payload } = json;\r\n        if(payload.project_id !== projectId) {\r\n          history.push(RoutingConfig.account);\r\n          dispatch(alertActions.errorAlert(\"Invalid telegram integration\"));\r\n          return;\r\n        }\r\n\r\n        if(!project || project.id !== projectId) {\r\n          ProjectApi.getProject(projectId)\r\n          .then(response => response.data)\r\n          .then(json => {\r\n            dispatch(projectActions.receiveProject(json.payload));\r\n            setStatus(REQUEST.SUCCESS);\r\n          })\r\n          .catch(error => {\r\n            setStatus(REQUEST.ERROR);\r\n          })\r\n        }\r\n        else {\r\n          setStatus(REQUEST.SUCCESS);\r\n        }\r\n        dispatch(telegramIntegrationActions.receiveIntegrationDetails(payload));        \r\n      })\r\n      .catch(error => {\r\n        const statusCode = error.request.status;\r\n        switch(statusCode) {\r\n          case STATUS_CODES.FORBIDDEN:\r\n            history.push(RoutingConfig.account);\r\n            dispatch(alertActions.errorAlert(\"You are not allowed to view this integration\"));\r\n            break;\r\n          default:\r\n            setStatus(REQUEST.ERROR);\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      setStatus(REQUEST.SUCCESS);\r\n    }\r\n  });\r\n\r\n  return(\r\n    <>\r\n      {<Seo pageTitle=\"Webhook integration\" />}\r\n      {status === REQUEST.PENDING && <h2>Loading...</h2>}\r\n      {status === REQUEST.ERROR && <h2>Failed to load project.</h2>}\r\n      {status === REQUEST.SUCCESS && (integration && project) && <TelegramIntegrationCard location={location} project={project} integration={integration} user={auth.user} />}\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  projects: state.projects,\r\n  telegramIntegrations: state.telegramIntegrations,\r\n})\r\n\r\nconst ConnectedPage = connect(mapStateToProps)(TelegramIntegration);\r\n\r\nexport { ConnectedPage as TelegramIntegration };","D:\\inzynierka\\overseer-client\\src\\components\\TelegramIntegrationCard\\TelegramIntegrationMessageRow.js",["467","468"],"import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Badge, Pagination, PaginationLink, PaginationItem } from 'reactstrap';\r\nimport { REQUEST } from '../../request.constants';\r\nimport { RoutingConfig } from '../../Routes';\r\nimport { IntegrationApi } from '../../services';\r\n\r\nconst formatDate = dateString => {\r\n  const date = new Date(dateString);\r\n\r\n  let month = '' + (date.getMonth() + 1),\r\n  day = '' + date.getDate(),\r\n  year = '' + date.getFullYear(),\r\n  hour = '' + date.getHours(),\r\n  minutes = '' + date.getMinutes();\r\n        \r\n  if(month.length < 2) \r\n    month = '0' + month;\r\n  if(day.length < 2) \r\n    day = '0' + day;\r\n  if(hour.length < 2)\r\n    hour = '0' + hour;\r\n  if(minutes.length < 2)\r\n    minutes = '0' + minutes;\r\n\r\n  return `${day}.${month}.${year}, ${hour}:${minutes}`;\r\n}\r\n\r\nexport const TelegramIntegrationMessagesRow = ({ integration, location, project }) => {\r\n  const [messages, setMessages] = useState({\r\n    page: 1,\r\n    count: 0,\r\n    items: [],\r\n  });\r\n  const [status, setStatus] = useState(REQUEST.PENDING);\r\n  const urlParams = new URLSearchParams(location.search);\r\n  const [activeMessagesIndex, setActiveMessageIndex] = useState(-1);\r\n\r\n  const requestMessages = (page) => {\r\n    IntegrationApi.getTelegramIntegrationMessages(integration.id, page)\r\n    .then(response => response.data)\r\n    .then(json => {\r\n      setMessages({\r\n        page: json.payload.page,\r\n        count: json.payload.count,\r\n        items: json.payload.items,\r\n      });\r\n      setStatus(REQUEST.SUCCESS);\r\n      setActiveMessageIndex(-1);\r\n    })\r\n    .catch(error => {\r\n      setStatus(REQUEST.ERROR);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    console.log(urlParams.get(\"page\"));\r\n    requestMessages(urlParams.get(\"page\") || 1)\r\n  }, [urlParams.get(\"page\")]);\r\n\r\n  console.log(messages);\r\n  return(\r\n    <>\r\n      <div className=\"mb-4\">\r\n        <h3>Messages</h3>\r\n        <hr className=\"solid\"/>\r\n      </div>\r\n      {status === REQUEST.PENDING && <p>Loading...</p> }\r\n      {status === REQUEST.ERROR && <p>Failed to load messages</p> }\r\n      {status === REQUEST.SUCCESS && \r\n        <>\r\n          {messages.count === 0 ? <p>There are no messages to display</p> : messages.items.map((message, index) =>\r\n            <div className=\"mb-2\">\r\n              <p style={{cursor: \"pointer\"}} onClick={() => activeMessagesIndex === index ? setActiveMessageIndex(-1) : setActiveMessageIndex(index)}><strong>{`#${index + 1 + (messages.page - 1) * 10} ${message.id}`}</strong></p>\r\n              {activeMessagesIndex === index && \r\n                <>\r\n                  <p>Status: <Badge color={message.status === \"error\" ? \"danger\" : message.status === \"unprocessed\" ? \"secondary\" : \"success\"}>{message.status}</Badge> </p>\r\n                  <p>Last delivery attempt: <strong>{message.last_attempt ? formatDate(message.last_attempt) : '-'}</strong></p>\r\n                  <p>Next delivery attempt: <strong>{message.next_attempt ? formatDate(message.next_attempt) : '-'}</strong></p>\r\n                  <p>Delivery attempts: <strong>{message.attempt_count}</strong></p>\r\n                  <div>\r\n                    <p className=\"mb-1\">Message</p>\r\n                    <pre dangerouslySetInnerHTML={{ __html: message.telegram_message}} className=\"pl-2\" />\r\n                  </div>\r\n                </>\r\n              }\r\n            </div>\r\n          )}\r\n          {messages.count > 10 && <Pagination>\r\n            <PaginationItem disabled={messages.page === 1}>\r\n              <PaginationLink first tag={Link} to={RoutingConfig.telegramintegration.replace(\":id\", project.id).replace(\":integration_id\", integration.id) + `?page=1`} />\r\n            </PaginationItem>\r\n            <PaginationItem disabled={messages.page === 1}>\r\n              <PaginationLink previous tag={Link} to={RoutingConfig.telegramintegration.replace(\":id\", project.id).replace(\":integration_id\", integration.id) + `?page=${messages.page - 1}`} />\r\n            </PaginationItem>\r\n            <PaginationItem disabled={messages.page === Math.ceil(messages.count / 10)}>\r\n              <PaginationLink next tag={Link} to={RoutingConfig.telegramintegration.replace(\":id\", project.id).replace(\":integration_id\", integration.id) + `?page=${messages.page + 1}`} />\r\n            </PaginationItem>\r\n            <PaginationItem disabled={messages.page === Math.ceil(messages.count / 10)}>\r\n              <PaginationLink last tag={Link} to={RoutingConfig.telegramintegration.replace(\":id\", project.id).replace(\":integration_id\", integration.id) + `?page=${Math.ceil(messages.count / 10)}`} />\r\n            </PaginationItem>\r\n          </Pagination>}\r\n        </>\r\n      }\r\n    </>\r\n  )\r\n}","D:\\inzynierka\\overseer-client\\src\\pages\\EditTelegramIntegration.js",["469"],"import React, { useState, useEffect } from 'react'\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Seo, TelegramItegrationForm } from '../components';\r\nimport { alertActions, projectActions, telegramIntegrationActions } from '../redux';\r\nimport { REQUEST } from '../request.constants';\r\nimport { RoutingConfig } from '../Routes';\r\nimport { IntegrationApi, ProjectApi } from '../services';\r\nimport { STATUS_CODES } from '../status.constants';\r\n\r\nconst EditTelegramIntegration = ({ projects, telegramIntegrations, match, auth }) => {\r\n  const projectId = match.params.id;\r\n  const integrationId = match.params.integration_id;\r\n  const [status,setStatus] = useState(REQUEST.PENDING);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const integration = telegramIntegrations.currentIntegration;\r\n  const project = projects.currentProject;\r\n\r\n  useEffect(() => {\r\n    if(!integration || integration.id !== integrationId) {\r\n      IntegrationApi.getTelegramIntegration(integrationId)\r\n      .then(response => response.data)\r\n      .then(json => {\r\n        const { payload } = json;\r\n        if(payload.project_id !== projectId) {\r\n          history.push(RoutingConfig.account);\r\n          dispatch(alertActions.errorAlert(\"Invalid telegram integration\"));\r\n          return;\r\n        }\r\n\r\n        if(!project || project.id !== projectId) {\r\n          ProjectApi.getProject(projectId)\r\n          .then(response => response.data)\r\n          .then(json => {\r\n            dispatch(projectActions.receiveProject(json.payload));\r\n            setStatus(REQUEST.SUCCESS);\r\n          })\r\n          .catch(error => {\r\n            setStatus(REQUEST.ERROR);\r\n          })\r\n        }\r\n        else {\r\n          setStatus(REQUEST.SUCCESS);\r\n        }\r\n        dispatch(telegramIntegrationActions.receiveIntegrationDetails(payload));        \r\n      })\r\n      .catch(error => {\r\n        const statusCode = error.request.status;\r\n        switch(statusCode) {\r\n          case STATUS_CODES.FORBIDDEN:\r\n            history.push(RoutingConfig.account);\r\n            dispatch(alertActions.errorAlert(\"You are not allowed to view this error\"));\r\n            break;\r\n          default:\r\n            setStatus(REQUEST.ERROR);\r\n        }\r\n      })\r\n    }\r\n    else {\r\n      setStatus(REQUEST.SUCCESS);\r\n    }\r\n  });\r\n\r\n  return(\r\n    <>\r\n      {<Seo pageTitle=\"Edit telegram integration\" />}\r\n      {status === REQUEST.PENDING && <h2>Loading...</h2>}\r\n      {status === REQUEST.ERROR && <h2>Failed to load project.</h2>}\r\n      {status === REQUEST.SUCCESS && (integration && project) && <TelegramItegrationForm integration={integration} project={project} /> }\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  projects: state.projects,\r\n  telegramIntegrations: state.telegramIntegrations,\r\n})\r\n\r\nconst ConnectedPage = connect(mapStateToProps)(EditTelegramIntegration);\r\n\r\nexport { ConnectedPage as EditTelegramIntegration };","D:\\inzynierka\\overseer-client\\src\\components\\Footer.js",[],{"ruleId":"470","replacedBy":"471"},{"ruleId":"472","replacedBy":"473"},{"ruleId":"474","severity":1,"message":"475","line":28,"column":30,"nodeType":"476","messageId":"477","endLine":28,"endColumn":32},{"ruleId":"474","severity":1,"message":"475","line":31,"column":31,"nodeType":"476","messageId":"477","endLine":31,"endColumn":33},{"ruleId":"478","severity":1,"message":"479","line":15,"column":6,"nodeType":"480","endLine":15,"endColumn":8,"suggestions":"481"},{"ruleId":"478","severity":1,"message":"482","line":19,"column":6,"nodeType":"480","endLine":19,"endColumn":8,"suggestions":"483"},{"ruleId":"478","severity":1,"message":"484","line":39,"column":6,"nodeType":"480","endLine":39,"endColumn":61,"suggestions":"485"},{"ruleId":"478","severity":1,"message":"486","line":39,"column":7,"nodeType":"487","endLine":39,"endColumn":35},{"ruleId":"478","severity":1,"message":"486","line":39,"column":37,"nodeType":"487","endLine":39,"endColumn":60},{"ruleId":"478","severity":1,"message":"488","line":45,"column":6,"nodeType":"480","endLine":45,"endColumn":8,"suggestions":"489"},{"ruleId":"478","severity":1,"message":"490","line":49,"column":6,"nodeType":"480","endLine":49,"endColumn":8,"suggestions":"491"},{"ruleId":"478","severity":1,"message":"492","line":55,"column":5,"nodeType":"480","endLine":55,"endColumn":26,"suggestions":"493"},{"ruleId":"478","severity":1,"message":"494","line":126,"column":6,"nodeType":"480","endLine":126,"endColumn":115,"suggestions":"495"},{"ruleId":"478","severity":1,"message":"486","line":126,"column":7,"nodeType":"487","endLine":126,"endColumn":35},{"ruleId":"478","severity":1,"message":"486","line":126,"column":37,"nodeType":"487","endLine":126,"endColumn":60},{"ruleId":"478","severity":1,"message":"486","line":126,"column":62,"nodeType":"487","endLine":126,"endColumn":88},{"ruleId":"478","severity":1,"message":"486","line":126,"column":90,"nodeType":"487","endLine":126,"endColumn":114},{"ruleId":"478","severity":1,"message":"496","line":43,"column":6,"nodeType":"480","endLine":43,"endColumn":8,"suggestions":"497"},{"ruleId":"478","severity":1,"message":"498","line":30,"column":6,"nodeType":"480","endLine":30,"endColumn":50,"suggestions":"499"},{"ruleId":"478","severity":1,"message":"486","line":30,"column":7,"nodeType":"487","endLine":30,"endColumn":49},{"ruleId":"478","severity":1,"message":"490","line":52,"column":6,"nodeType":"480","endLine":52,"endColumn":8,"suggestions":"500"},{"ruleId":"478","severity":1,"message":"501","line":20,"column":3,"nodeType":"502","endLine":20,"endColumn":12,"suggestions":"503"},{"ruleId":"504","severity":1,"message":"505","line":4,"column":15,"nodeType":"502","messageId":"506","endLine":4,"endColumn":37},{"ruleId":"478","severity":1,"message":"501","line":20,"column":3,"nodeType":"502","endLine":20,"endColumn":12,"suggestions":"507"},{"ruleId":"478","severity":1,"message":"508","line":61,"column":6,"nodeType":"480","endLine":61,"endColumn":29,"suggestions":"509"},{"ruleId":"478","severity":1,"message":"486","line":61,"column":7,"nodeType":"487","endLine":61,"endColumn":28},{"ruleId":"478","severity":1,"message":"498","line":30,"column":6,"nodeType":"480","endLine":30,"endColumn":51,"suggestions":"510"},{"ruleId":"478","severity":1,"message":"486","line":30,"column":7,"nodeType":"487","endLine":30,"endColumn":50},{"ruleId":"478","severity":1,"message":"490","line":53,"column":6,"nodeType":"480","endLine":53,"endColumn":8,"suggestions":"511"},{"ruleId":"478","severity":1,"message":"501","line":20,"column":3,"nodeType":"502","endLine":20,"endColumn":12,"suggestions":"512"},{"ruleId":"478","severity":1,"message":"508","line":58,"column":6,"nodeType":"480","endLine":58,"endColumn":29,"suggestions":"513"},{"ruleId":"478","severity":1,"message":"486","line":58,"column":7,"nodeType":"487","endLine":58,"endColumn":28},{"ruleId":"478","severity":1,"message":"501","line":20,"column":3,"nodeType":"502","endLine":20,"endColumn":12,"suggestions":"514"},"no-native-reassign",["515"],"no-negated-in-lhs",["516"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["517"],"React Hook useEffect has a missing dependency: 'passwordResetToken'. Either include it or remove the dependency array.",["518"],"React Hook useEffect has a missing dependency: 'requestProjects'. Either include it or remove the dependency array.",["519"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'project', and 'projectId'. Either include them or remove the dependency array.",["520"],"React Hook useEffect has missing dependencies: 'auth.user', 'dispatch', 'history', 'project', and 'projectId'. Either include them or remove the dependency array.",["521"],"React Hook useEffect has a missing dependency: 'searchTerm'. Either include it or remove the dependency array.",["522"],"React Hook useEffect has missing dependencies: 'requestChartData' and 'requestErrors'. Either include them or remove the dependency array.",["523"],"React Hook useEffect has missing dependencies: 'dispatch', 'error', 'errorId', 'history', and 'projectId'. Either include them or remove the dependency array.",["524"],"React Hook useEffect has a missing dependency: 'requestIntegrations'. Either include it or remove the dependency array.",["525"],["526"],"React Hook useEffect contains a call to 'setStatus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [integration, integrationId, projectId, project, dispatch, history] as a second argument to the useEffect Hook.","Identifier",["527"],"no-unused-vars","'WebhookIntegrationCard' is defined but never used.","unusedVar",["528"],"React Hook useEffect has missing dependencies: 'requestMessages' and 'urlParams'. Either include them or remove the dependency array.",["529"],["530"],["531"],["532"],["533"],["534"],"no-global-assign","no-unsafe-negation",{"desc":"535","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"543","fix":"553"},{"desc":"554","fix":"555"},{"desc":"554","fix":"556"},{"desc":"557","fix":"558"},{"desc":"551","fix":"559"},{"desc":"543","fix":"560"},{"desc":"554","fix":"561"},{"desc":"557","fix":"562"},{"desc":"554","fix":"563"},"Update the dependencies array to be: [dispatch, history]",{"range":"564","text":"565"},"Update the dependencies array to be: [passwordResetToken]",{"range":"566","text":"567"},"Update the dependencies array to be: [requestProjects]",{"range":"568","text":"569"},"Update the dependencies array to be: [dispatch, history, project, projectId]",{"range":"570","text":"571"},"Update the dependencies array to be: [auth.user, dispatch, history, project, projectId]",{"range":"572","text":"573"},"Update the dependencies array to be: [debouncedSearchTerm, searchTerm]",{"range":"574","text":"575"},"Update the dependencies array to be: [requestChartData, requestErrors]",{"range":"576","text":"577"},"Update the dependencies array to be: [dispatch, error, errorId, history, projectId]",{"range":"578","text":"579"},"Update the dependencies array to be: [requestIntegrations]",{"range":"580","text":"581"},{"range":"582","text":"573"},"Add dependencies array: [integration, integrationId, projectId, project, dispatch, history]",{"range":"583","text":"584"},{"range":"585","text":"584"},"Update the dependencies array to be: [requestMessages, urlParams]",{"range":"586","text":"587"},{"range":"588","text":"581"},{"range":"589","text":"573"},{"range":"590","text":"584"},{"range":"591","text":"587"},{"range":"592","text":"584"},[501,503],"[dispatch, history]",[624,626],"[passwordResetToken]",[1410,1465],"[requestProjects]",[1577,1579],"[dispatch, history, project, projectId]",[1795,1797],"[auth.user, dispatch, history, project, projectId]",[1789,1810],"[debouncedSearchTerm, searchTerm]",[3766,3875],"[requestChartData, requestErrors]",[1514,1516],"[dispatch, error, errorId, history, projectId]",[1188,1232],"[requestIntegrations]",[1903,1905],[2371,2371],", [integration, integrationId, projectId, project, dispatch, history]",[2382,2382],[1906,1929],"[requestMessages, urlParams]",[1193,1238],[1936,1938],[2379,2379],[1800,1823],[2366,2366]]